<Activity mc:Ignorable="sap sap2010" x:Class="CreateDictionaryFromXMLData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_XMLData" Type="InArgument(sxl:XDocument)" />
    <x:Property Name="out_XMLDictionary" Type="OutArgument(scg:IDictionary(x:String, x:String))" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>828,1946</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Builds a protocol with informatin recieved from OeP.&#xA;&#xA;Pre Condition: Logged into OeP.&#xA;Post Condotion: N/A" DisplayName="CreateDictionaryFromXMLData" sap:VirtualizedContainerService.HintSize="788,1866" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Assign new dictionary" sap:VirtualizedContainerService.HintSize="766,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:IDictionary(x:String, x:String)">[out_XMLDictionary]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:IDictionary(x:String, x:String)">[new dictionary(of string, string)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="sxl:XNode" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="766,1570" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[in_XMLData.Descendants]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sxl:XNode">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sxl:XNode" Name="Child" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Add Low Lever Elements" sap:VirtualizedContainerService.HintSize="750,1436" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="ElementName" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[Child.NodeType.Equals(XmlNodeType.Element)]" DisplayName="If Node is a Element" sap:VirtualizedContainerService.HintSize="728,1312" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence DisplayName="Add to Dictionary If No Children" sap:VirtualizedContainerService.HintSize="603,1164" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sxl:XNode" Name="Node" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[CType(Child, System.Xml.Linq.XElement).HasElements.Equals(false)]" DisplayName="If Element Has No Children" sap:VirtualizedContainerService.HintSize="581,1040" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Then>
                      <Sequence DisplayName="Set Long XML Dictionary Name" sap:VirtualizedContainerService.HintSize="456,892" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sxl:XNode" Name="NextNode" />
                          <Variable x:TypeArguments="x:Int32" Default="1" Name="i" />
                          <Variable x:TypeArguments="sxl:XNode" Name="TempNode" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sxl:XNode">[TempNode]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sxl:XNode">[Child.Parent]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InterruptibleWhile Condition="[TempNode IsNot Nothing AND TempNode.GetType IsNot GetType(XDocument)]" DisplayName="While Not At Root Level Of XML" sap:VirtualizedContainerService.HintSize="434,225" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                          <ui:InterruptibleWhile.Body>
                            <Sequence DisplayName="Set Name and Next Node" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Sequence_6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Concat To Name" sap:VirtualizedContainerService.HintSize="507,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[ElementName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[CType(TempNode, System.Xml.Linq.XElement).Name.LocalName + "\" + ElementName]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[TempNode.Parent IsNot Nothing]" DisplayName="If Node Has Parent" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_3">
                                <If.Then>
                                  <Assign DisplayName="Assign Parent Node To Node" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sxl:XNode">[TempNode]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sxl:XNode">[TempNode.Parent]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                                <If.Else>
                                  <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                                </If.Else>
                              </If>
                            </Sequence>
                          </ui:InterruptibleWhile.Body>
                        </ui:InterruptibleWhile>
                        <ui:InterruptibleWhile Condition="[out_XMLDictionary.ContainsKey(ElementName +CType(Child, System.Xml.Linq.XElement).Name.LocalName + if(i = 1, &quot;&quot;, i.ToString))]" DisplayName="While" sap:VirtualizedContainerService.HintSize="434,225" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
                          <ui:InterruptibleWhile.Body>
                            <Assign DisplayName="Add One To i" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[i+1]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </ui:InterruptibleWhile.Body>
                        </ui:InterruptibleWhile>
                        <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[out_XMLDictionary]" DisplayName="Add to dictionary" sap:VirtualizedContainerService.HintSize="434,138" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_1" Key="[ElementName+ CType(Child, System.Xml.Linq.XElement).Name.LocalName + if(i = 1, &quot;&quot;, i.ToString)]" Value="[CType(Child, System.Xml.Linq.XElement).Value]" />
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>